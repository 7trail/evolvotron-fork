#!/bin/bash

# Add checks for dumb/bad things in code here.

echo "Multiple header include counts (consider moving common ones to precompileds):"
fgrep -h '#include' */*.h */*.cpp  | sort | uniq -c | sort -n | awk '($1>1){print $0;}'

echo "Checking .cpp files' first include is precompiled header:"
for F in */*.cpp ; do
  D=`dirname "${F}"`
  EXPECT="#include \"${D}_precompiled.h\""
  ACTUAL=`cat ${F} | fgrep '#include' | head -1`
  if [ "${EXPECT}" != "${ACTUAL}" ] ; then echo "${F} :"; echo "  Expected ${EXPECT}, found ${ACTUAL}" ; fi
done

echo "Checking library .cpp files' second include (excluding function_boilerplate_instantiate.h) is own header:"
for F in lib*/*.cpp ; do
  B=`basename "${F}" .cpp`
  EXPECT="#include \"${B}.h\""
  ACTUAL=`cat ${F} | fgrep '#include' | fgrep -v '#include "function_boilerplate_instantiate.h"' | head -2 | tail -1`
  if [ "${EXPECT}" != "${ACTUAL}" ] ; then echo "${F} :" ; echo "  Expected ${EXPECT}, found ${ACTUAL}" ; fi
done

echo "Checking libfunction/function_*.h files include at most one function definition"
for F in libfunction/function_*.h ; do
  N=`fgrep 'FUNCTION_BEGIN(' ${F} | wc -l`
  if [ ${N} -ge "2" ] ; then echo "${F} :" ; echo "  ${N} function definitions found (expected 1 at most)" ; fi
done
